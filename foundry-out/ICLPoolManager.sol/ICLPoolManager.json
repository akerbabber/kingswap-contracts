{"abi":[{"type":"function","name":"MAX_TICK_SPACING","inputs":[],"outputs":[{"name":"","type":"int24","internalType":"int24"}],"stateMutability":"view"},{"type":"function","name":"MIN_PROTOCOL_FEE_DENOMINATOR","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"MIN_TICK_SPACING","inputs":[],"outputs":[{"name":"","type":"int24","internalType":"int24"}],"stateMutability":"view"},{"type":"function","name":"collectProtocolFees","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"currency","type":"address","internalType":"Currency"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amountCollected","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"donate","inputs":[{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"hooks","type":"address","internalType":"contract IHooks"},{"name":"poolManager","type":"address","internalType":"contract IPoolManager"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"parameters","type":"bytes32","internalType":"bytes32"}]},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"int256","internalType":"BalanceDelta"}],"stateMutability":"nonpayable"},{"type":"function","name":"extsload","inputs":[{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"extsload","inputs":[{"name":"slots","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getLiquidity","inputs":[{"name":"id","type":"bytes32","internalType":"PoolId"},{"name":"owner","type":"address","internalType":"address"},{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"}],"outputs":[{"name":"liquidity","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"getLiquidity","inputs":[{"name":"id","type":"bytes32","internalType":"PoolId"}],"outputs":[{"name":"liquidity","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"getLmPool","inputs":[{"name":"id","type":"bytes32","internalType":"PoolId"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getPosition","inputs":[{"name":"id","type":"bytes32","internalType":"PoolId"},{"name":"owner","type":"address","internalType":"address"},{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"}],"outputs":[{"name":"position","type":"tuple","internalType":"struct CLPosition.Info","components":[{"name":"liquidity","type":"uint128","internalType":"uint128"},{"name":"feeGrowthInside0LastX128","type":"uint256","internalType":"uint256"},{"name":"feeGrowthInside1LastX128","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getSlot0","inputs":[{"name":"id","type":"bytes32","internalType":"PoolId"}],"outputs":[{"name":"sqrtPriceX96","type":"uint160","internalType":"uint160"},{"name":"tick","type":"int24","internalType":"int24"},{"name":"protocolFee","type":"uint16","internalType":"uint16"},{"name":"swapFee","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"hooks","type":"address","internalType":"contract IHooks"},{"name":"poolManager","type":"address","internalType":"contract IPoolManager"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"parameters","type":"bytes32","internalType":"bytes32"}]},{"name":"sqrtPriceX96","type":"uint160","internalType":"uint160"},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"tick","type":"int24","internalType":"int24"}],"stateMutability":"nonpayable"},{"type":"function","name":"masterChef","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"modifyLiquidity","inputs":[{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"hooks","type":"address","internalType":"contract IHooks"},{"name":"poolManager","type":"address","internalType":"contract IPoolManager"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"parameters","type":"bytes32","internalType":"bytes32"}]},{"name":"params","type":"tuple","internalType":"struct ICLPoolManager.ModifyLiquidityParams","components":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"liquidityDelta","type":"int256","internalType":"int256"}]},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"int256","internalType":"BalanceDelta"}],"stateMutability":"nonpayable"},{"type":"function","name":"protocolFeesAccrued","inputs":[{"name":"","type":"address","internalType":"Currency"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"setLmPool","inputs":[{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"hooks","type":"address","internalType":"contract IHooks"},{"name":"poolManager","type":"address","internalType":"contract IPoolManager"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"parameters","type":"bytes32","internalType":"bytes32"}]},{"name":"lmPool","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMasterChef","inputs":[{"name":"masterChef","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setProtocolFee","inputs":[{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"hooks","type":"address","internalType":"contract IHooks"},{"name":"poolManager","type":"address","internalType":"contract IPoolManager"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"parameters","type":"bytes32","internalType":"bytes32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setProtocolFeeController","inputs":[{"name":"controller","type":"address","internalType":"contract IProtocolFeeController"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"swap","inputs":[{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"hooks","type":"address","internalType":"contract IHooks"},{"name":"poolManager","type":"address","internalType":"contract IPoolManager"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"parameters","type":"bytes32","internalType":"bytes32"}]},{"name":"params","type":"tuple","internalType":"struct ICLPoolManager.SwapParams","components":[{"name":"zeroForOne","type":"bool","internalType":"bool"},{"name":"amountSpecified","type":"int256","internalType":"int256"},{"name":"sqrtPriceLimitX96","type":"uint160","internalType":"uint160"}]},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"int256","internalType":"BalanceDelta"}],"stateMutability":"nonpayable"},{"type":"function","name":"updateDynamicSwapFee","inputs":[{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"hooks","type":"address","internalType":"contract IHooks"},{"name":"poolManager","type":"address","internalType":"contract IPoolManager"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"parameters","type":"bytes32","internalType":"bytes32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Donate","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"PoolId"},{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"amount0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount1","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"tick","type":"int24","indexed":false,"internalType":"int24"}],"anonymous":false},{"type":"event","name":"DynamicSwapFeeUpdated","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"PoolId"},{"name":"dynamicSwapFee","type":"uint24","indexed":false,"internalType":"uint24"}],"anonymous":false},{"type":"event","name":"Initialize","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"PoolId"},{"name":"currency0","type":"address","indexed":true,"internalType":"Currency"},{"name":"currency1","type":"address","indexed":true,"internalType":"Currency"},{"name":"fee","type":"uint24","indexed":false,"internalType":"uint24"},{"name":"tickSpacing","type":"int24","indexed":false,"internalType":"int24"},{"name":"hooks","type":"address","indexed":false,"internalType":"contract ICLHooks"}],"anonymous":false},{"type":"event","name":"ModifyLiquidity","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"PoolId"},{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"tickLower","type":"int24","indexed":false,"internalType":"int24"},{"name":"tickUpper","type":"int24","indexed":false,"internalType":"int24"},{"name":"liquidityDelta","type":"int256","indexed":false,"internalType":"int256"}],"anonymous":false},{"type":"event","name":"ProtocolFeeControllerUpdated","inputs":[{"name":"protocolFeeController","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ProtocolFeeUpdated","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"PoolId"},{"name":"protocolFee","type":"uint16","indexed":false,"internalType":"uint16"}],"anonymous":false},{"type":"event","name":"SetLmPool","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"PoolId"},{"name":"lmPool","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"SetMasterChef","inputs":[{"name":"masterChef","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Swap","inputs":[{"name":"id","type":"bytes32","indexed":true,"internalType":"PoolId"},{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"amount0","type":"int128","indexed":false,"internalType":"int128"},{"name":"amount1","type":"int128","indexed":false,"internalType":"int128"},{"name":"sqrtPriceX96","type":"uint160","indexed":false,"internalType":"uint160"},{"name":"liquidity","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"tick","type":"int24","indexed":false,"internalType":"int24"},{"name":"fee","type":"uint24","indexed":false,"internalType":"uint24"},{"name":"protocolFee","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"CurrenciesInitializedOutOfOrder","inputs":[]},{"type":"error","name":"FeeNotDynamic","inputs":[]},{"type":"error","name":"FeeTooLarge","inputs":[]},{"type":"error","name":"InvalidProtocolFeeCollector","inputs":[]},{"type":"error","name":"PoolManagerMismatch","inputs":[]},{"type":"error","name":"PoolNotInitialized","inputs":[]},{"type":"error","name":"ProtocolFeeCannotBeFetched","inputs":[]},{"type":"error","name":"ProtocolFeeControllerCallFailedOrInvalidResult","inputs":[]},{"type":"error","name":"TickSpacingTooLarge","inputs":[]},{"type":"error","name":"TickSpacingTooSmall","inputs":[]},{"type":"error","name":"UnauthorizedCaller","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"MAX_TICK_SPACING()":"60460f06","MIN_PROTOCOL_FEE_DENOMINATOR()":"84e41c5e","MIN_TICK_SPACING()":"07eff0dd","collectProtocolFees(address,address,uint256)":"8161b874","donate((address,address,address,address,uint24,bytes32),uint256,uint256,bytes)":"f15b275f","extsload(bytes32)":"1e2eaeaf","extsload(bytes32[])":"dbd035ff","getLiquidity(bytes32)":"fa6793d5","getLiquidity(bytes32,address,int24,int24)":"33aa955b","getLmPool(bytes32)":"ee681114","getPosition(bytes32,address,int24,int24)":"048d9c70","getSlot0(bytes32)":"c815641c","initialize((address,address,address,address,uint24,bytes32),uint160,bytes)":"222bb36b","masterChef()":"575a86b2","modifyLiquidity((address,address,address,address,uint24,bytes32),(int24,int24,int256),bytes)":"5c3379f9","protocolFeesAccrued(address)":"97e8cd4e","setLmPool((address,address,address,address,uint24,bytes32),address)":"23a8c31f","setMasterChef(address)":"a2d9f4dc","setProtocolFee((address,address,address,address,uint24,bytes32))":"5afdef74","setProtocolFeeController(address)":"2d771389","swap((address,address,address,address,uint24,bytes32),(bool,int256,uint160),bytes)":"cd0cc1ce","updateDynamicSwapFee((address,address,address,address,uint24,bytes32))":"f427ddba"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CurrenciesInitializedOutOfOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeNotDynamic\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProtocolFeeCollector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolManagerMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolNotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolFeeCannotBeFetched\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolFeeControllerCallFailedOrInvalidResult\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TickSpacingTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TickSpacingTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedCaller\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Donate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"dynamicSwapFee\",\"type\":\"uint24\"}],\"name\":\"DynamicSwapFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"contract ICLHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"}],\"name\":\"ModifyLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"protocolFeeController\",\"type\":\"address\"}],\"name\":\"ProtocolFeeControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"protocolFee\",\"type\":\"uint16\"}],\"name\":\"ProtocolFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lmPool\",\"type\":\"address\"}],\"name\":\"SetLmPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"masterChef\",\"type\":\"address\"}],\"name\":\"SetMasterChef\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount0\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount1\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_TICK_SPACING\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PROTOCOL_FEE_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_TICK_SPACING\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"collectProtocolFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCollected\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"},{\"internalType\":\"contract IPoolManager\",\"name\":\"poolManager\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"bytes32\",\"name\":\"parameters\",\"type\":\"bytes32\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"donate\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slots\",\"type\":\"bytes32[]\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getLmPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"}],\"internalType\":\"struct CLPosition.Info\",\"name\":\"position\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getSlot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"protocolFee\",\"type\":\"uint16\"},{\"internalType\":\"uint24\",\"name\":\"swapFee\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"},{\"internalType\":\"contract IPoolManager\",\"name\":\"poolManager\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"bytes32\",\"name\":\"parameters\",\"type\":\"bytes32\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterChef\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"},{\"internalType\":\"contract IPoolManager\",\"name\":\"poolManager\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"bytes32\",\"name\":\"parameters\",\"type\":\"bytes32\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"}],\"internalType\":\"struct ICLPoolManager.ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"modifyLiquidity\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"protocolFeesAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"},{\"internalType\":\"contract IPoolManager\",\"name\":\"poolManager\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"bytes32\",\"name\":\"parameters\",\"type\":\"bytes32\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"lmPool\",\"type\":\"address\"}],\"name\":\"setLmPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"masterChef\",\"type\":\"address\"}],\"name\":\"setMasterChef\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"},{\"internalType\":\"contract IPoolManager\",\"name\":\"poolManager\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"bytes32\",\"name\":\"parameters\",\"type\":\"bytes32\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IProtocolFeeController\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setProtocolFeeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"},{\"internalType\":\"contract IPoolManager\",\"name\":\"poolManager\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"bytes32\",\"name\":\"parameters\",\"type\":\"bytes32\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ICLPoolManager.SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"},{\"internalType\":\"contract IPoolManager\",\"name\":\"poolManager\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"bytes32\",\"name\":\"parameters\",\"type\":\"bytes32\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"}],\"name\":\"updateDynamicSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Donate(bytes32,address,uint256,uint256,int24)\":{\"params\":{\"amount0\":\"The delta of the currency0 balance of the pool\",\"amount1\":\"The delta of the currency1 balance of the pool\",\"id\":\"The abi encoded hash of the pool key struct for the pool that was modified\",\"sender\":\"The address that modified the pool\",\"tick\":\"The donated tick\"}},\"DynamicSwapFeeUpdated(bytes32,uint24)\":{\"details\":\"The event is emitted even if the updated swap fee is the same as previous swap fee\"},\"Initialize(bytes32,address,address,uint24,int24,address)\":{\"params\":{\"currency0\":\"The first currency of the pool by address sort order\",\"currency1\":\"The second currency of the pool by address sort order\",\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"hooks\":\"The hooks contract address for the pool, or address(0) if none\",\"id\":\"The abi encoded hash of the pool key struct for the new pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\"}},\"ModifyLiquidity(bytes32,address,int24,int24,int256)\":{\"params\":{\"id\":\"The abi encoded hash of the pool key struct for the pool that was modified\",\"liquidityDelta\":\"The amount of liquidity that was added or removed\",\"sender\":\"The address that modified the pool\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"ProtocolFeeUpdated(bytes32,uint16)\":{\"details\":\"The event is emitted even if the updated protocolFee is the same as previous protocolFee\"},\"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24,uint256)\":{\"params\":{\"amount0\":\"The delta of the currency0 balance of the pool\",\"amount1\":\"The delta of the currency1 balance of the pool\",\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"id\":\"The abi encoded hash of the pool key struct for the pool that was modified\",\"liquidity\":\"The liquidity of the pool after the swap\",\"protocolFee\":\"Protocol fee from the swap, and it is only on the input currency\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of the price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"extsload(bytes32)\":{\"params\":{\"slot\":\"to read from.\"},\"returns\":{\"value\":\"stored at the slot.\"}},\"extsload(bytes32[])\":{\"params\":{\"slots\":\"to read from.\"},\"returns\":{\"_0\":\"values stored at the slots.\"}},\"setLmPool((address,address,address,address,uint24,bytes32),address)\":{\"details\":\"During swap, pool will call LMPool to accumulate reward or notify when current tick is crossed.      The only reason why owner call is when we no longer rely on lmPool for farming incentives or      there is an issue with the existing lmPool and we need to change it.\"},\"setMasterChef(address)\":{\"details\":\"If farming is migrated to off-chain in the future, masterChef can be reverted to address(0)\"},\"updateDynamicSwapFee((address,address,address,address,uint24,bytes32))\":{\"details\":\"Some of the use case could be:   1) when hook#beforeSwap() is called and hook call this function to update the swap fee   2) For BinPool only, when hook#beforeMint() is called and hook call this function to update the swap fee   3) other use case where the hook might want to on an ad-hoc basis increase/reduce swap fee\"}},\"version\":1},\"userdoc\":{\"errors\":{\"CurrenciesInitializedOutOfOrder()\":[{\"notice\":\"PoolKey must have currencies where address(currency0) < address(currency1)\"}],\"FeeNotDynamic()\":[{\"notice\":\"Thrown when an attempt to update pool swap fee but the pool does not have dynamic fee.\"}],\"FeeTooLarge()\":[{\"notice\":\"Thrown when the protocol fee denominator is less than 4. Also thrown when the static or dynamic fee on a pool exceeds the upper limit.\"}],\"InvalidProtocolFeeCollector()\":[{\"notice\":\"Thrown when user not authorized to collect protocol fee\"}],\"PoolManagerMismatch()\":[{\"notice\":\"PoolManagerMismatch is thrown when pool manager specified in the pool key does not match current contract\"}],\"PoolNotInitialized()\":[{\"notice\":\"Thrown when trying to interact with a non-initialized pool\"}],\"ProtocolFeeCannotBeFetched()\":[{\"notice\":\"Thrown when not enough gas is provided to look up the protocol fee\"}],\"ProtocolFeeControllerCallFailedOrInvalidResult()\":[{\"notice\":\"Thrown when the call to fetch the protocol fee reverts or returns invalid data.\"}],\"TickSpacingTooLarge()\":[{\"notice\":\"Pools are limited to type(int16).max tickSpacing in #initialize, to prevent overflow\"}],\"TickSpacingTooSmall()\":[{\"notice\":\"Pools must have a positive non-zero tickSpacing passed to #initialize\"}],\"UnauthorizedCaller()\":[{\"notice\":\"Error thrown when Unauthorized caller\"}]},\"events\":{\"Donate(bytes32,address,uint256,uint256,int24)\":{\"notice\":\"Emitted when donate happen\"},\"DynamicSwapFeeUpdated(bytes32,uint24)\":{\"notice\":\"Emitted when swap fee is updated\"},\"Initialize(bytes32,address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a new pool is initialized\"},\"ModifyLiquidity(bytes32,address,int24,int24,int256)\":{\"notice\":\"Emitted when a liquidity position is modified\"},\"ProtocolFeeUpdated(bytes32,uint16)\":{\"notice\":\"Emitted when protocol fee is updated\"},\"SetLmPool(bytes32,address)\":{\"notice\":\"Emitted when LMPool is set for a pool\"},\"SetMasterChef(address)\":{\"notice\":\"Emitted when masterChef is updated\"},\"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24,uint256)\":{\"notice\":\"Emitted for swaps between currency0 and currency1\"}},\"kind\":\"user\",\"methods\":{\"MAX_TICK_SPACING()\":{\"notice\":\"Returns the constant representing the maximum tickSpacing for an initialized pool key\"},\"MIN_PROTOCOL_FEE_DENOMINATOR()\":{\"notice\":\"Returns the minimum denominator for the protocol fee, which restricts it to a maximum of 25%\"},\"MIN_TICK_SPACING()\":{\"notice\":\"Returns the constant representing the minimum tickSpacing for an initialized pool key\"},\"collectProtocolFees(address,address,uint256)\":{\"notice\":\"Collects the protocol fee accrued in the given currency, called by the owner or the protocol fee controller\"},\"donate((address,address,address,address,uint24,bytes32),uint256,uint256,bytes)\":{\"notice\":\"Donate the given currency amounts to the pool with the given pool key\"},\"extsload(bytes32)\":{\"notice\":\"Returns a value from the storage.\"},\"extsload(bytes32[])\":{\"notice\":\"Returns multiple values from storage.\"},\"getLiquidity(bytes32)\":{\"notice\":\"Get the current value of liquidity of the given pool\"},\"getLiquidity(bytes32,address,int24,int24)\":{\"notice\":\"Get the current value of liquidity for the specified pool and position\"},\"getLmPool(bytes32)\":{\"notice\":\"Return the lmPool for a poolId, address(0) if not set\"},\"getPosition(bytes32,address,int24,int24)\":{\"notice\":\"Get the position struct for a specified pool and position\"},\"getSlot0(bytes32)\":{\"notice\":\"Get the current value in slot0 of the given pool\"},\"initialize((address,address,address,address,uint24,bytes32),uint160,bytes)\":{\"notice\":\"Initialize the state for a given pool ID\"},\"masterChef()\":{\"notice\":\"Return the masterChef address set\"},\"modifyLiquidity((address,address,address,address,uint24,bytes32),(int24,int24,int256),bytes)\":{\"notice\":\"Modify the position for the given pool\"},\"protocolFeesAccrued(address)\":{\"notice\":\"Given a currency address, returns the protocol fees accrued in that currency\"},\"setLmPool((address,address,address,address,uint24,bytes32),address)\":{\"notice\":\"Set liquidity mining pool for a poolId. if a pool has farmining incentive, masterChef         will deploy and assign an LM Pool to a pool.\"},\"setMasterChef(address)\":{\"notice\":\"Set masterChef address, in case when farming incentive for a pool begin.\"},\"setProtocolFee((address,address,address,address,uint24,bytes32))\":{\"notice\":\"Sets the protocol's swap fee for the given pool Protocol fee is always a portion of swap fee that is owed. If that underlying fee is 0, no protocol fee will accrue even if it is set to > 0.\"},\"setProtocolFeeController(address)\":{\"notice\":\"Update the protocol fee controller, called by the owner\"},\"swap((address,address,address,address,uint24,bytes32),(bool,int256,uint160),bytes)\":{\"notice\":\"Swap against the given pool\"},\"updateDynamicSwapFee((address,address,address,address,uint24,bytes32))\":{\"notice\":\"Updates the pools swap fee for the a pool that has enabled dynamic swap fee.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/pancake-v4-core/src/pool-cl/interfaces/ICLPoolManager.sol\":\"ICLPoolManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@openzeppelin/=lib/pancake-v4-core/lib/openzeppelin-contracts/\",\":@pancakeswap/v4-core/=lib/pancake-v4-core/\",\":@pancakeswap/v4-periphery/=lib/pancake-v4-periphery/\",\":ds-test/=lib/pancake-v4-core/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/pancake-v4-core/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":pancake-v4-core/=lib/pancake-v4-core/\",\":pancake-v4-periphery/=lib/pancake-v4-periphery/\",\":solmate/=lib/pancake-v4-core/lib/solmate/src/\"]},\"sources\":{\"lib/pancake-v4-core/src/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xd21325930292346a3d8ccd787a3c1f2e96da5af5b8b1871f3230ef40a2dfb080\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adc2083a73040d486be24418b86bd46380aaac7a06923d8a3b1675d6a03d0f99\",\"dweb:/ipfs/QmVE6sj6CBdR1tus2aYQoRTKFtjGaUufZN2C9QV88birgc\"]},\"lib/pancake-v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x78efad54e9dd5715909ae6179716a0181e8f3cbe57412a4cbfb1dc025ff62790\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dea81efed1a024bf6fd70f233816bfa5b7e8eb4c9bb3d18fe5a8440f88744e8f\",\"dweb:/ipfs/QmRdMBU11DRGPSUkJcf6Zcvva5GeGge66gj3QQYrBtjcFf\"]},\"lib/pancake-v4-core/src/interfaces/IFees.sol\":{\"keccak256\":\"0x9fc9f19409ea458c5ea3ef86bb40e730743ba08b00838617747587a964e4da41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae94177946ad92c24542db75a7973acefd4cef893ff97f58bdb04e23444a43b1\",\"dweb:/ipfs/QmQ5MKheHeb1yHi3BGbuqnygtDQJKXDS7YisK1oQsRBCSm\"]},\"lib/pancake-v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0x1a47a0c52d038f3f231de66c7d558fc6dfc663f4b24c6e95bef922423cfdc027\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb2792b93a6601ba00141245e8101bd35c91df2d7e13e8cc31966ed85fde291a\",\"dweb:/ipfs/QmTihJz4NjA1G4217v58LaBYwLo5xaMXyLGUrbaFKXRLDd\"]},\"lib/pancake-v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xfd7838e6d0fea2d6b54f9630565eb33c9faa93f22855aea4e8da28daa702a753\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d30982bdc29e3bf25d8777197415320c073e3ff6685e5650b96578cfecd0ae8\",\"dweb:/ipfs/QmTJS36mqJfFFsBBTDDBxgjVtCmFHwwebyuufsoxtdnjiS\"]},\"lib/pancake-v4-core/src/interfaces/IProtocolFeeController.sol\":{\"keccak256\":\"0xdc87cf4a93fd3012a3ebc291a2191ef6b764261b80d0923524cb941ac92d8559\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ab876db31ea99e214e95ca2ca0e7ed9b2cb8917fa63e02b45d613c41774fda3\",\"dweb:/ipfs/QmWdc6LZ4acTGWoiWkhkCWJyv3uBRXd4fjrzoCoZqwmokk\"]},\"lib/pancake-v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x7e7f09dd3e83f8a46295959888b10c52b3a3a470479bed7f9297d9d84c945e55\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed5355d2b52d395beb9f6d961c9a46ea36dc261a34b7b4b1df44881eb73594db\",\"dweb:/ipfs/QmeGihtbD6sgbJj5CRLxkyoXQbBGgJg2YL4HDXscNTjXSk\"]},\"lib/pancake-v4-core/src/pool-cl/interfaces/ICLHooks.sol\":{\"keccak256\":\"0x0456843a69042b94d37fecbdbad854a56e7ada37e0b6daca0b16a55ca8d7dfea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67cbdc923ccab6ba5efcc80a16581be21d24ef51c22b10ed49791e7e055d3090\",\"dweb:/ipfs/Qmamkk33T8YuL4iPejNm7ocm6zfcfsYWNES1kAACceguPR\"]},\"lib/pancake-v4-core/src/pool-cl/interfaces/ICLLmPool.sol\":{\"keccak256\":\"0x3570603dcf8e8ad3edd24caab4377a906fce3d39f7819f870355148813b20e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfc6e2700fd036ffbede4d9680d1f84c8555ed48abb8368d34a5e73f5666a2cc\",\"dweb:/ipfs/QmcZ5ED7Eabn1GdKsbpCuiBGCD6FVsFEfP6g1adTdHPMWH\"]},\"lib/pancake-v4-core/src/pool-cl/interfaces/ICLPoolManager.sol\":{\"keccak256\":\"0x677842da926aea5808e27e1b73478f0b2774f961d9942faccb57796ee26b95de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34fbd5a54761336fbc26135fa1529287f6e80e8e09c2401e67303ffd92816f80\",\"dweb:/ipfs/QmQLb7n563h7iVwRRCJHGx2n8V7bs5P9X2wwy9RbNjJQsT\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/BitMath.sol\":{\"keccak256\":\"0x66c454a22a5ba6cd4b59192080a52ef97cca8806497f7712310e56757603604d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4f5d152c3179ef8bde19ebb82604a8cbec1260d2c13a41ce715d185298c5cc61\",\"dweb:/ipfs/QmYTZa2PXxdqcqtk5X1jvg4VunogcMF6NSjLjurNEyav1x\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/CLPool.sol\":{\"keccak256\":\"0x8f94dc579a6ff19f2fa963d2961704a279e2615fd1aec0f34ea66bd7a138c320\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ce6bc06313edbdbd26c08fe915107a5b676a64cc7dbed8ebd39726e75df52ad2\",\"dweb:/ipfs/QmU7jukhNuyD7bjM85TRy68YRKuBqbCTzgTdqGLmxtjbFR\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/CLPosition.sol\":{\"keccak256\":\"0x8412a5ff367a6aefc50111fa17787a29ae154b9955b5d07fc0f8658cf0fca21f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://90ce40bf2cc0a4c7dfa73ec1b5405670ec73762448a9b3628faabbf4f61d0eff\",\"dweb:/ipfs/QmdiDVcDkeN7FkpndjD8NzQnR8QfEzNfGnQrn3vApmdjBj\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x55d1efee27d9e43b3d94cea311c82aed7f9b1c6adfe67b7b7bf50211c8cd8186\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9d383cb4e7b54482d1dc5fe6e466432901552619250eaf4f25e0b33629586db\",\"dweb:/ipfs/QmTpwkQBQPREn6gYBPaPcCo5JMkKWw8hiMEUNnTbe6x93v\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/FixedPoint96.sol\":{\"keccak256\":\"0xe4e810eb2dbbc159ee558743bd68e99662ab4fcfc60d9f1c787b08e3a2992a3a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9e2f028c2518196aaa508a3b15b071a7617c1a9bbb22ef4a1571a5231e41a7f0\",\"dweb:/ipfs/QmUqe3ZFxVpRvGxPyNsfsNLHLXaJQdurJBC8tRL3WhcXj6\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/FullMath.sol\":{\"keccak256\":\"0x676ac68f43b2730b9ca16ea3cc60bd45c134fa0eadaff2120b040f87b421d327\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1f879486760513b25fa9b12ca9621e5596abb7f33f1ea4686d3d5fc93555a6d2\",\"dweb:/ipfs/QmdCqDpjFAkSWWR7xdxWLNebTV5rcgQFeHUNPvKVPdR9XD\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xa53a006aebd5c51da0467fc2c055c5f3f0cbdaeac00e0f3c983410fa91efd547\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9bb55441832e6c0f3d628cdaf980e80b043ecb9edfdb4c72df00bdc17a7465c6\",\"dweb:/ipfs/QmdJdrz5B9FpiBbqnMmxiSJnqmEN6hgrJY4D2yUvxrkDE6\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0xe9fd591f58c195d77b948c38d9e6bb7bf87eddb5bfee9a1dc65a39daaecbf739\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f8ea7e0e743166a81966eb3428068f4db29d91fb897d22eb03bcfcfb22206891\",\"dweb:/ipfs/QmUSHKz3X851ommRLUWzNsP6iwjLzFiMc5RzepkRAwuK33\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/SwapMath.sol\":{\"keccak256\":\"0x628aa76cec680364848bda1a5e73852832dd05a07fc664bbeeedb33cea8512dd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bed9aae0ab2c42086f26be1226aefe99fe815fabf1fb4a3d60115496de87a918\",\"dweb:/ipfs/QmVnvWWRboNnskXnQJGEMQaJqdeUvMvzm6RooyA8tnfWu5\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/Tick.sol\":{\"keccak256\":\"0x1fab9b99ed40df2e27d161d972d0bf12ae46365e212e74d273bd09a27209b489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c1b9a7f944f761df0d47dd55f91e8ad085a31c0f4dc0cef6d0d59d5ceb510fee\",\"dweb:/ipfs/QmReVJCiPd58cpvSfZpabdz6B7VqQFbZg1eEsaTjtrNyAi\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/TickBitmap.sol\":{\"keccak256\":\"0x3b4e72929c821b73cf5c3793468ea2a387ea42c1b4ff81e8538958b81fd2f019\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cf892533dcf4f1d6569181a201e7862e7af7c6eecb61de2dab665c426d320d9f\",\"dweb:/ipfs/Qmemf6qCRCyZVvukLaJjY3VsJdanPAhFzAWM7L65mn2iZk\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/TickMath.sol\":{\"keccak256\":\"0xacefefd050e2726d6fe74d0310086183bdf7e839c2fa6277d537cca0862a8d6d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5d8299d40ffdfa53b555b92108d780b08a7d59a77009599713075e58e6440d6b\",\"dweb:/ipfs/QmVaijnHv5aJfxwUiLk68wycUpSxUxJvs5fyJ4KU7mk35N\"]},\"lib/pancake-v4-core/src/pool-cl/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x9a8916d66a1f7b8ff6bc35db674210edebf54e751eb58549727809c503f3d089\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://42bf96c1c9de03c23ccd8b92160f0d2e4ef3b2ec6c51704efd1c0a6259245f1a\",\"dweb:/ipfs/QmUZqGdfgT6bW1r5reztUvpxhiM3uXHy6uwCgbk8DZZ94H\"]},\"lib/pancake-v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0x19cc7a26b782c7f0ac92daf7df3116be271864b869208b3eb8a4139fa46df998\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c6f33ccba6ad98848be2ccc20909eedfb0c0feae252869d6d08d121b31fc637\",\"dweb:/ipfs/QmZ8f7NHB13S3d5fnEDz4MrVcZpDiHoTbuzEBwoCUYWXzT\"]},\"lib/pancake-v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x81622643b14e180e32a644f7bc885b8ba754570c25cbe3af1a95cdb03b8bdf20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bdb351264422ade9596a1fe79d2ea1e78f1edc013d7fd06a31cde725545b5a0\",\"dweb:/ipfs/QmbyyiNJSaCwVRuaA5oxjMFzm3pDtUWzf22sWSjhEEVwgg\"]},\"lib/pancake-v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0xfca58dcea1e9d77257f5a108b748c9439389b5f7ef48e37478720228c712f533\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab1dea325943064519a060d7f4322b5fe1f33868e6d96d0dd8699683a80f3ab4\",\"dweb:/ipfs/QmV7V7fLUrEZ3XZ3jKCAWKwnoak3azJ44TXqNuCnugoTTp\"]},\"lib/pancake-v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xb8aa7017794cd10fb711720ae2ea4f87e871b1c113b2e285960e63f4f52fc5c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f19a1975d93d1ddec92d5512979b5c4f2aa38296c3eaacf97af47dbd64804be0\",\"dweb:/ipfs/QmSZjYFnwdTYT3W6F3T3m4exrUKUP58P15Mt8VcYFh4UQo\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"CurrenciesInitializedOutOfOrder"},{"inputs":[],"type":"error","name":"FeeNotDynamic"},{"inputs":[],"type":"error","name":"FeeTooLarge"},{"inputs":[],"type":"error","name":"InvalidProtocolFeeCollector"},{"inputs":[],"type":"error","name":"PoolManagerMismatch"},{"inputs":[],"type":"error","name":"PoolNotInitialized"},{"inputs":[],"type":"error","name":"ProtocolFeeCannotBeFetched"},{"inputs":[],"type":"error","name":"ProtocolFeeControllerCallFailedOrInvalidResult"},{"inputs":[],"type":"error","name":"TickSpacingTooLarge"},{"inputs":[],"type":"error","name":"TickSpacingTooSmall"},{"inputs":[],"type":"error","name":"UnauthorizedCaller"},{"inputs":[{"internalType":"PoolId","name":"id","type":"bytes32","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"uint256","name":"amount0","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount1","type":"uint256","indexed":false},{"internalType":"int24","name":"tick","type":"int24","indexed":false}],"type":"event","name":"Donate","anonymous":false},{"inputs":[{"internalType":"PoolId","name":"id","type":"bytes32","indexed":true},{"internalType":"uint24","name":"dynamicSwapFee","type":"uint24","indexed":false}],"type":"event","name":"DynamicSwapFeeUpdated","anonymous":false},{"inputs":[{"internalType":"PoolId","name":"id","type":"bytes32","indexed":true},{"internalType":"Currency","name":"currency0","type":"address","indexed":true},{"internalType":"Currency","name":"currency1","type":"address","indexed":true},{"internalType":"uint24","name":"fee","type":"uint24","indexed":false},{"internalType":"int24","name":"tickSpacing","type":"int24","indexed":false},{"internalType":"contract ICLHooks","name":"hooks","type":"address","indexed":false}],"type":"event","name":"Initialize","anonymous":false},{"inputs":[{"internalType":"PoolId","name":"id","type":"bytes32","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"int24","name":"tickLower","type":"int24","indexed":false},{"internalType":"int24","name":"tickUpper","type":"int24","indexed":false},{"internalType":"int256","name":"liquidityDelta","type":"int256","indexed":false}],"type":"event","name":"ModifyLiquidity","anonymous":false},{"inputs":[{"internalType":"address","name":"protocolFeeController","type":"address","indexed":false}],"type":"event","name":"ProtocolFeeControllerUpdated","anonymous":false},{"inputs":[{"internalType":"PoolId","name":"id","type":"bytes32","indexed":true},{"internalType":"uint16","name":"protocolFee","type":"uint16","indexed":false}],"type":"event","name":"ProtocolFeeUpdated","anonymous":false},{"inputs":[{"internalType":"PoolId","name":"id","type":"bytes32","indexed":true},{"internalType":"address","name":"lmPool","type":"address","indexed":false}],"type":"event","name":"SetLmPool","anonymous":false},{"inputs":[{"internalType":"address","name":"masterChef","type":"address","indexed":false}],"type":"event","name":"SetMasterChef","anonymous":false},{"inputs":[{"internalType":"PoolId","name":"id","type":"bytes32","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"int128","name":"amount0","type":"int128","indexed":false},{"internalType":"int128","name":"amount1","type":"int128","indexed":false},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160","indexed":false},{"internalType":"uint128","name":"liquidity","type":"uint128","indexed":false},{"internalType":"int24","name":"tick","type":"int24","indexed":false},{"internalType":"uint24","name":"fee","type":"uint24","indexed":false},{"internalType":"uint256","name":"protocolFee","type":"uint256","indexed":false}],"type":"event","name":"Swap","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"MAX_TICK_SPACING","outputs":[{"internalType":"int24","name":"","type":"int24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"MIN_PROTOCOL_FEE_DENOMINATOR","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"MIN_TICK_SPACING","outputs":[{"internalType":"int24","name":"","type":"int24"}]},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"Currency","name":"currency","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"collectProtocolFees","outputs":[{"internalType":"uint256","name":"amountCollected","type":"uint256"}]},{"inputs":[{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"contract IHooks","name":"hooks","type":"address"},{"internalType":"contract IPoolManager","name":"poolManager","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"bytes32","name":"parameters","type":"bytes32"}]},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"donate","outputs":[{"internalType":"BalanceDelta","name":"","type":"int256"}]},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"extsload","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32[]","name":"slots","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"extsload","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"PoolId","name":"id","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"stateMutability":"view","type":"function","name":"getLiquidity","outputs":[{"internalType":"uint128","name":"liquidity","type":"uint128"}]},{"inputs":[{"internalType":"PoolId","name":"id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getLiquidity","outputs":[{"internalType":"uint128","name":"liquidity","type":"uint128"}]},{"inputs":[{"internalType":"PoolId","name":"id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getLmPool","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"PoolId","name":"id","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"stateMutability":"view","type":"function","name":"getPosition","outputs":[{"internalType":"struct CLPosition.Info","name":"position","type":"tuple","components":[{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"}]}]},{"inputs":[{"internalType":"PoolId","name":"id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getSlot0","outputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"protocolFee","type":"uint16"},{"internalType":"uint24","name":"swapFee","type":"uint24"}]},{"inputs":[{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"contract IHooks","name":"hooks","type":"address"},{"internalType":"contract IPoolManager","name":"poolManager","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"bytes32","name":"parameters","type":"bytes32"}]},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"initialize","outputs":[{"internalType":"int24","name":"tick","type":"int24"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"masterChef","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"contract IHooks","name":"hooks","type":"address"},{"internalType":"contract IPoolManager","name":"poolManager","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"bytes32","name":"parameters","type":"bytes32"}]},{"internalType":"struct ICLPoolManager.ModifyLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"int256","name":"liquidityDelta","type":"int256"}]},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"modifyLiquidity","outputs":[{"internalType":"BalanceDelta","name":"","type":"int256"}]},{"inputs":[{"internalType":"Currency","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"protocolFeesAccrued","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"contract IHooks","name":"hooks","type":"address"},{"internalType":"contract IPoolManager","name":"poolManager","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"bytes32","name":"parameters","type":"bytes32"}]},{"internalType":"address","name":"lmPool","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setLmPool"},{"inputs":[{"internalType":"address","name":"masterChef","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setMasterChef"},{"inputs":[{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"contract IHooks","name":"hooks","type":"address"},{"internalType":"contract IPoolManager","name":"poolManager","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"bytes32","name":"parameters","type":"bytes32"}]}],"stateMutability":"nonpayable","type":"function","name":"setProtocolFee"},{"inputs":[{"internalType":"contract IProtocolFeeController","name":"controller","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setProtocolFeeController"},{"inputs":[{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"contract IHooks","name":"hooks","type":"address"},{"internalType":"contract IPoolManager","name":"poolManager","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"bytes32","name":"parameters","type":"bytes32"}]},{"internalType":"struct ICLPoolManager.SwapParams","name":"params","type":"tuple","components":[{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}]},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"swap","outputs":[{"internalType":"BalanceDelta","name":"","type":"int256"}]},{"inputs":[{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"contract IHooks","name":"hooks","type":"address"},{"internalType":"contract IPoolManager","name":"poolManager","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"bytes32","name":"parameters","type":"bytes32"}]}],"stateMutability":"nonpayable","type":"function","name":"updateDynamicSwapFee"}],"devdoc":{"kind":"dev","methods":{"extsload(bytes32)":{"params":{"slot":"to read from."},"returns":{"value":"stored at the slot."}},"extsload(bytes32[])":{"params":{"slots":"to read from."},"returns":{"_0":"values stored at the slots."}},"setLmPool((address,address,address,address,uint24,bytes32),address)":{"details":"During swap, pool will call LMPool to accumulate reward or notify when current tick is crossed.      The only reason why owner call is when we no longer rely on lmPool for farming incentives or      there is an issue with the existing lmPool and we need to change it."},"setMasterChef(address)":{"details":"If farming is migrated to off-chain in the future, masterChef can be reverted to address(0)"},"updateDynamicSwapFee((address,address,address,address,uint24,bytes32))":{"details":"Some of the use case could be:   1) when hook#beforeSwap() is called and hook call this function to update the swap fee   2) For BinPool only, when hook#beforeMint() is called and hook call this function to update the swap fee   3) other use case where the hook might want to on an ad-hoc basis increase/reduce swap fee"}},"version":1},"userdoc":{"kind":"user","methods":{"MAX_TICK_SPACING()":{"notice":"Returns the constant representing the maximum tickSpacing for an initialized pool key"},"MIN_PROTOCOL_FEE_DENOMINATOR()":{"notice":"Returns the minimum denominator for the protocol fee, which restricts it to a maximum of 25%"},"MIN_TICK_SPACING()":{"notice":"Returns the constant representing the minimum tickSpacing for an initialized pool key"},"collectProtocolFees(address,address,uint256)":{"notice":"Collects the protocol fee accrued in the given currency, called by the owner or the protocol fee controller"},"donate((address,address,address,address,uint24,bytes32),uint256,uint256,bytes)":{"notice":"Donate the given currency amounts to the pool with the given pool key"},"extsload(bytes32)":{"notice":"Returns a value from the storage."},"extsload(bytes32[])":{"notice":"Returns multiple values from storage."},"getLiquidity(bytes32)":{"notice":"Get the current value of liquidity of the given pool"},"getLiquidity(bytes32,address,int24,int24)":{"notice":"Get the current value of liquidity for the specified pool and position"},"getLmPool(bytes32)":{"notice":"Return the lmPool for a poolId, address(0) if not set"},"getPosition(bytes32,address,int24,int24)":{"notice":"Get the position struct for a specified pool and position"},"getSlot0(bytes32)":{"notice":"Get the current value in slot0 of the given pool"},"initialize((address,address,address,address,uint24,bytes32),uint160,bytes)":{"notice":"Initialize the state for a given pool ID"},"masterChef()":{"notice":"Return the masterChef address set"},"modifyLiquidity((address,address,address,address,uint24,bytes32),(int24,int24,int256),bytes)":{"notice":"Modify the position for the given pool"},"protocolFeesAccrued(address)":{"notice":"Given a currency address, returns the protocol fees accrued in that currency"},"setLmPool((address,address,address,address,uint24,bytes32),address)":{"notice":"Set liquidity mining pool for a poolId. if a pool has farmining incentive, masterChef         will deploy and assign an LM Pool to a pool."},"setMasterChef(address)":{"notice":"Set masterChef address, in case when farming incentive for a pool begin."},"setProtocolFee((address,address,address,address,uint24,bytes32))":{"notice":"Sets the protocol's swap fee for the given pool Protocol fee is always a portion of swap fee that is owed. If that underlying fee is 0, no protocol fee will accrue even if it is set to > 0."},"setProtocolFeeController(address)":{"notice":"Update the protocol fee controller, called by the owner"},"swap((address,address,address,address,uint24,bytes32),(bool,int256,uint160),bytes)":{"notice":"Swap against the given pool"},"updateDynamicSwapFee((address,address,address,address,uint24,bytes32))":{"notice":"Updates the pools swap fee for the a pool that has enabled dynamic swap fee."}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/pancake-v4-core/lib/openzeppelin-contracts/","@pancakeswap/v4-core/=lib/pancake-v4-core/","@pancakeswap/v4-periphery/=lib/pancake-v4-periphery/","ds-test/=lib/pancake-v4-core/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/pancake-v4-core/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","pancake-v4-core/=lib/pancake-v4-core/","pancake-v4-periphery/=lib/pancake-v4-periphery/","solmate/=lib/pancake-v4-core/lib/solmate/src/"],"optimizer":{"enabled":true,"runs":800},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/pancake-v4-core/src/pool-cl/interfaces/ICLPoolManager.sol":"ICLPoolManager"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/pancake-v4-core/src/interfaces/IERC20Minimal.sol":{"keccak256":"0xd21325930292346a3d8ccd787a3c1f2e96da5af5b8b1871f3230ef40a2dfb080","urls":["bzz-raw://adc2083a73040d486be24418b86bd46380aaac7a06923d8a3b1675d6a03d0f99","dweb:/ipfs/QmVE6sj6CBdR1tus2aYQoRTKFtjGaUufZN2C9QV88birgc"],"license":"MIT"},"lib/pancake-v4-core/src/interfaces/IExtsload.sol":{"keccak256":"0x78efad54e9dd5715909ae6179716a0181e8f3cbe57412a4cbfb1dc025ff62790","urls":["bzz-raw://dea81efed1a024bf6fd70f233816bfa5b7e8eb4c9bb3d18fe5a8440f88744e8f","dweb:/ipfs/QmRdMBU11DRGPSUkJcf6Zcvva5GeGge66gj3QQYrBtjcFf"],"license":"MIT"},"lib/pancake-v4-core/src/interfaces/IFees.sol":{"keccak256":"0x9fc9f19409ea458c5ea3ef86bb40e730743ba08b00838617747587a964e4da41","urls":["bzz-raw://ae94177946ad92c24542db75a7973acefd4cef893ff97f58bdb04e23444a43b1","dweb:/ipfs/QmQ5MKheHeb1yHi3BGbuqnygtDQJKXDS7YisK1oQsRBCSm"],"license":"MIT"},"lib/pancake-v4-core/src/interfaces/IHooks.sol":{"keccak256":"0x1a47a0c52d038f3f231de66c7d558fc6dfc663f4b24c6e95bef922423cfdc027","urls":["bzz-raw://eb2792b93a6601ba00141245e8101bd35c91df2d7e13e8cc31966ed85fde291a","dweb:/ipfs/QmTihJz4NjA1G4217v58LaBYwLo5xaMXyLGUrbaFKXRLDd"],"license":"MIT"},"lib/pancake-v4-core/src/interfaces/IPoolManager.sol":{"keccak256":"0xfd7838e6d0fea2d6b54f9630565eb33c9faa93f22855aea4e8da28daa702a753","urls":["bzz-raw://6d30982bdc29e3bf25d8777197415320c073e3ff6685e5650b96578cfecd0ae8","dweb:/ipfs/QmTJS36mqJfFFsBBTDDBxgjVtCmFHwwebyuufsoxtdnjiS"],"license":"MIT"},"lib/pancake-v4-core/src/interfaces/IProtocolFeeController.sol":{"keccak256":"0xdc87cf4a93fd3012a3ebc291a2191ef6b764261b80d0923524cb941ac92d8559","urls":["bzz-raw://6ab876db31ea99e214e95ca2ca0e7ed9b2cb8917fa63e02b45d613c41774fda3","dweb:/ipfs/QmWdc6LZ4acTGWoiWkhkCWJyv3uBRXd4fjrzoCoZqwmokk"],"license":"MIT"},"lib/pancake-v4-core/src/libraries/SafeCast.sol":{"keccak256":"0x7e7f09dd3e83f8a46295959888b10c52b3a3a470479bed7f9297d9d84c945e55","urls":["bzz-raw://ed5355d2b52d395beb9f6d961c9a46ea36dc261a34b7b4b1df44881eb73594db","dweb:/ipfs/QmeGihtbD6sgbJj5CRLxkyoXQbBGgJg2YL4HDXscNTjXSk"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/interfaces/ICLHooks.sol":{"keccak256":"0x0456843a69042b94d37fecbdbad854a56e7ada37e0b6daca0b16a55ca8d7dfea","urls":["bzz-raw://67cbdc923ccab6ba5efcc80a16581be21d24ef51c22b10ed49791e7e055d3090","dweb:/ipfs/Qmamkk33T8YuL4iPejNm7ocm6zfcfsYWNES1kAACceguPR"],"license":"MIT"},"lib/pancake-v4-core/src/pool-cl/interfaces/ICLLmPool.sol":{"keccak256":"0x3570603dcf8e8ad3edd24caab4377a906fce3d39f7819f870355148813b20e0f","urls":["bzz-raw://dfc6e2700fd036ffbede4d9680d1f84c8555ed48abb8368d34a5e73f5666a2cc","dweb:/ipfs/QmcZ5ED7Eabn1GdKsbpCuiBGCD6FVsFEfP6g1adTdHPMWH"],"license":"MIT"},"lib/pancake-v4-core/src/pool-cl/interfaces/ICLPoolManager.sol":{"keccak256":"0x677842da926aea5808e27e1b73478f0b2774f961d9942faccb57796ee26b95de","urls":["bzz-raw://34fbd5a54761336fbc26135fa1529287f6e80e8e09c2401e67303ffd92816f80","dweb:/ipfs/QmQLb7n563h7iVwRRCJHGx2n8V7bs5P9X2wwy9RbNjJQsT"],"license":"MIT"},"lib/pancake-v4-core/src/pool-cl/libraries/BitMath.sol":{"keccak256":"0x66c454a22a5ba6cd4b59192080a52ef97cca8806497f7712310e56757603604d","urls":["bzz-raw://4f5d152c3179ef8bde19ebb82604a8cbec1260d2c13a41ce715d185298c5cc61","dweb:/ipfs/QmYTZa2PXxdqcqtk5X1jvg4VunogcMF6NSjLjurNEyav1x"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/CLPool.sol":{"keccak256":"0x8f94dc579a6ff19f2fa963d2961704a279e2615fd1aec0f34ea66bd7a138c320","urls":["bzz-raw://ce6bc06313edbdbd26c08fe915107a5b676a64cc7dbed8ebd39726e75df52ad2","dweb:/ipfs/QmU7jukhNuyD7bjM85TRy68YRKuBqbCTzgTdqGLmxtjbFR"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/CLPosition.sol":{"keccak256":"0x8412a5ff367a6aefc50111fa17787a29ae154b9955b5d07fc0f8658cf0fca21f","urls":["bzz-raw://90ce40bf2cc0a4c7dfa73ec1b5405670ec73762448a9b3628faabbf4f61d0eff","dweb:/ipfs/QmdiDVcDkeN7FkpndjD8NzQnR8QfEzNfGnQrn3vApmdjBj"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/FixedPoint128.sol":{"keccak256":"0x55d1efee27d9e43b3d94cea311c82aed7f9b1c6adfe67b7b7bf50211c8cd8186","urls":["bzz-raw://f9d383cb4e7b54482d1dc5fe6e466432901552619250eaf4f25e0b33629586db","dweb:/ipfs/QmTpwkQBQPREn6gYBPaPcCo5JMkKWw8hiMEUNnTbe6x93v"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/FixedPoint96.sol":{"keccak256":"0xe4e810eb2dbbc159ee558743bd68e99662ab4fcfc60d9f1c787b08e3a2992a3a","urls":["bzz-raw://9e2f028c2518196aaa508a3b15b071a7617c1a9bbb22ef4a1571a5231e41a7f0","dweb:/ipfs/QmUqe3ZFxVpRvGxPyNsfsNLHLXaJQdurJBC8tRL3WhcXj6"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/FullMath.sol":{"keccak256":"0x676ac68f43b2730b9ca16ea3cc60bd45c134fa0eadaff2120b040f87b421d327","urls":["bzz-raw://1f879486760513b25fa9b12ca9621e5596abb7f33f1ea4686d3d5fc93555a6d2","dweb:/ipfs/QmdCqDpjFAkSWWR7xdxWLNebTV5rcgQFeHUNPvKVPdR9XD"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/LiquidityMath.sol":{"keccak256":"0xa53a006aebd5c51da0467fc2c055c5f3f0cbdaeac00e0f3c983410fa91efd547","urls":["bzz-raw://9bb55441832e6c0f3d628cdaf980e80b043ecb9edfdb4c72df00bdc17a7465c6","dweb:/ipfs/QmdJdrz5B9FpiBbqnMmxiSJnqmEN6hgrJY4D2yUvxrkDE6"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/SqrtPriceMath.sol":{"keccak256":"0xe9fd591f58c195d77b948c38d9e6bb7bf87eddb5bfee9a1dc65a39daaecbf739","urls":["bzz-raw://f8ea7e0e743166a81966eb3428068f4db29d91fb897d22eb03bcfcfb22206891","dweb:/ipfs/QmUSHKz3X851ommRLUWzNsP6iwjLzFiMc5RzepkRAwuK33"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/SwapMath.sol":{"keccak256":"0x628aa76cec680364848bda1a5e73852832dd05a07fc664bbeeedb33cea8512dd","urls":["bzz-raw://bed9aae0ab2c42086f26be1226aefe99fe815fabf1fb4a3d60115496de87a918","dweb:/ipfs/QmVnvWWRboNnskXnQJGEMQaJqdeUvMvzm6RooyA8tnfWu5"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/Tick.sol":{"keccak256":"0x1fab9b99ed40df2e27d161d972d0bf12ae46365e212e74d273bd09a27209b489","urls":["bzz-raw://c1b9a7f944f761df0d47dd55f91e8ad085a31c0f4dc0cef6d0d59d5ceb510fee","dweb:/ipfs/QmReVJCiPd58cpvSfZpabdz6B7VqQFbZg1eEsaTjtrNyAi"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/TickBitmap.sol":{"keccak256":"0x3b4e72929c821b73cf5c3793468ea2a387ea42c1b4ff81e8538958b81fd2f019","urls":["bzz-raw://cf892533dcf4f1d6569181a201e7862e7af7c6eecb61de2dab665c426d320d9f","dweb:/ipfs/Qmemf6qCRCyZVvukLaJjY3VsJdanPAhFzAWM7L65mn2iZk"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/TickMath.sol":{"keccak256":"0xacefefd050e2726d6fe74d0310086183bdf7e839c2fa6277d537cca0862a8d6d","urls":["bzz-raw://5d8299d40ffdfa53b555b92108d780b08a7d59a77009599713075e58e6440d6b","dweb:/ipfs/QmVaijnHv5aJfxwUiLk68wycUpSxUxJvs5fyJ4KU7mk35N"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/pool-cl/libraries/UnsafeMath.sol":{"keccak256":"0x9a8916d66a1f7b8ff6bc35db674210edebf54e751eb58549727809c503f3d089","urls":["bzz-raw://42bf96c1c9de03c23ccd8b92160f0d2e4ef3b2ec6c51704efd1c0a6259245f1a","dweb:/ipfs/QmUZqGdfgT6bW1r5reztUvpxhiM3uXHy6uwCgbk8DZZ94H"],"license":"GPL-2.0-or-later"},"lib/pancake-v4-core/src/types/BalanceDelta.sol":{"keccak256":"0x19cc7a26b782c7f0ac92daf7df3116be271864b869208b3eb8a4139fa46df998","urls":["bzz-raw://4c6f33ccba6ad98848be2ccc20909eedfb0c0feae252869d6d08d121b31fc637","dweb:/ipfs/QmZ8f7NHB13S3d5fnEDz4MrVcZpDiHoTbuzEBwoCUYWXzT"],"license":"MIT"},"lib/pancake-v4-core/src/types/Currency.sol":{"keccak256":"0x81622643b14e180e32a644f7bc885b8ba754570c25cbe3af1a95cdb03b8bdf20","urls":["bzz-raw://7bdb351264422ade9596a1fe79d2ea1e78f1edc013d7fd06a31cde725545b5a0","dweb:/ipfs/QmbyyiNJSaCwVRuaA5oxjMFzm3pDtUWzf22sWSjhEEVwgg"],"license":"MIT"},"lib/pancake-v4-core/src/types/PoolId.sol":{"keccak256":"0xfca58dcea1e9d77257f5a108b748c9439389b5f7ef48e37478720228c712f533","urls":["bzz-raw://ab1dea325943064519a060d7f4322b5fe1f33868e6d96d0dd8699683a80f3ab4","dweb:/ipfs/QmV7V7fLUrEZ3XZ3jKCAWKwnoak3azJ44TXqNuCnugoTTp"],"license":"MIT"},"lib/pancake-v4-core/src/types/PoolKey.sol":{"keccak256":"0xb8aa7017794cd10fb711720ae2ea4f87e871b1c113b2e285960e63f4f52fc5c6","urls":["bzz-raw://f19a1975d93d1ddec92d5512979b5c4f2aa38296c3eaacf97af47dbd64804be0","dweb:/ipfs/QmSZjYFnwdTYT3W6F3T3m4exrUKUP58P15Mt8VcYFh4UQo"],"license":"MIT"}},"version":1},"id":66}